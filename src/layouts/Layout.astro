---
import Noise from "../components/Noise.astro";
---

<!DOCTYPE HTML>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap" rel="stylesheet">
		<title>Vitor Akiyama</title>
	</head>
	<body class="bg-light-blue min-h-dvh z-20 outfit-base relative pb-10">
    <div class="fixed w-full h-lvh opacity-40 pointer-events-none z-20">
      <Noise />
    </div>
		<slot />
	</body>

  <script>
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
          e.preventDefault();

          // @ts-ignore
          document.querySelector(this.getAttribute('href')).scrollIntoView({
              behavior: 'smooth'
          });
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      const skillItems = document.querySelectorAll('.skill-item');
      const skillSection = document.querySelector("#skills"); 
      
      if (!skillSection) return; 
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            skillItems.forEach((item, index) => {
              // @ts-ignore
              item.style.transitionDelay = `${index * 120}ms`;
              item.classList.add('animate-in');
            });
            
            observer.unobserve(entry.target); 
          }
        });
      }, { 
        threshold: 0.5 
      });
      
      observer.observe(skillSection);
    });
  </script>
</html>
